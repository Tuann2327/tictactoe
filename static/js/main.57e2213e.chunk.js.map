{"version":3,"sources":["index.js"],"names":["SearchMenu","props","state","selectedRegion","className","value","this","onChange","e","selecthandle","target","setState","disabled","list","placeholder","searchchange","Component","CountriesInfo","selectedCountries","txtsearched","searched","regionarray","countries","slice","filter","country","includes","CountryCode","Country","toLowerCase","global","listCountries","map","flagSrc","src","alt","TotalConfirmed","toString","replace","TotalDeaths","TotalRecovered","listGlobal","App","GlobalInfo","Countries","SelectedRegion","RegionArray","TxtSearched","GetCovidAPI","a","SelectRegion","apilink","axios","get","api","data","arrayData","contry","alpha2Code","globalInfo","Global","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.57e2213e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios'\r\nimport './index.css';\r\n\r\n// function DataList(props){\r\n    \r\n//     const countries =props.countries.slice()\r\n//     const datalist = countries.map((country) => <option key={country.CountryCode}>{country.Country}</option>)\r\n//     return datalist\r\n// }\r\n\r\nclass SearchMenu extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            selectedRegion: '',\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='Search-Container'>\r\n                <h1>Covid-19 Reporter</h1>\r\n                <div className='Search-Bar'>\r\n                    <select \r\n                        className='Region-Selector' \r\n                        value={this.state.selectedRegion} \r\n                        onChange={\r\n                            (e)=>{\r\n                                this.props.selecthandle(e.target.value)\r\n                                this.setState({selectedRegion:e.target.value})\r\n                            }\r\n                        }\r\n                    >\r\n                        <option disabled={true} value=''>Select Region</option>\r\n                        <option>Worldwide</option>\r\n                        <option>Africa</option>\r\n                        <option>Americas</option>\r\n                        <option>Asia</option>\r\n                        <option>Europe</option>\r\n                        <option>Oceania</option>\r\n                    </select>\r\n                    <input className='Search' list='country-search' placeholder='Search' onChange={e=>this.props.searchchange(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nfunction CountriesInfo(props){\r\n    const txtsearched = props.searched;\r\n    const regionarray = props.regionarray;\r\n    const countries = props.countries.slice();\r\n    let selectedCountries;\r\n    if(regionarray && regionarray!=='ww'){\r\n        selectedCountries = countries.filter(country => {\r\n            return regionarray.includes(country.CountryCode)\r\n        })\r\n    }else selectedCountries = countries.slice();\r\n    if(txtsearched) selectedCountries = selectedCountries.filter(country =>{\r\n        return country.Country.toLowerCase().includes(txtsearched.toLowerCase())\r\n    })\r\n    const global = props.global;\r\n     if(!selectedCountries || !global) return null; \r\n    const listCountries = selectedCountries.map((country) =>{\r\n        const flagSrc = `https://flagcdn.com/w160/${country.CountryCode.toLowerCase()}.png`\r\n        \r\n        return(\r\n        <div className='info-card' key={country.CountryCode}>\r\n            <img className='country-flag' src={flagSrc} alt=\"flag\"/>\r\n            <p className='country-name'>{country.Country}</p>\r\n            <p className='country-confirmed'>{country.TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-deaths'>{country.TotalDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-recovered'>{country.TotalRecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n        )\r\n        }\r\n    )\r\n\r\n    const listGlobal = (global)=>{\r\n        return(\r\n        <div className='info-card world-wide'>\r\n            <img className='country-flag' src='https://i2x.ai/wp-content/uploads/2018/01/flag-global.jpg' alt='flag' />\r\n            <p className='country-name'>Global</p>\r\n            <p className='country-confirmed'>{global.TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-deaths'>{global.TotalDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-recovered'>{global.TotalRecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <section className='country-container'>\r\n            <header className='sticky-card'> \r\n                <SearchMenu selecthandle = {value => props.selecthandle(value)} searchchange= {searched => props.searchchange(searched)} countries={countries}/>\r\n                <div className='info-card card-title'>\r\n                    <p className='country-title title'>Countries</p>\r\n                    <p className='country-confirmed title'>Total Confirmed</p>\r\n                    <p className='country-deaths title'>Total Deaths</p>\r\n                    <p className='country-recovered title'>Total Recovered</p>\r\n                </div>\r\n                {listGlobal(global)}\r\n            </header>\r\n            {listCountries}\r\n        </section>\r\n    )\r\n}\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            GlobalInfo: '',\r\n            Countries: '',\r\n            SelectedRegion: null,\r\n            RegionArray: null,\r\n            TxtSearched:'',\r\n        }\r\n        this.GetCovidAPI()\r\n    }\r\n    \r\n    async SelectRegion(value){\r\n        await this.setState({SelectedRegion: value})\r\n        if(this.SelectRegion){\r\n            if(this.state.SelectedRegion === 'Worldwide'){\r\n                this.setState({RegionArray: 'ww'},)\r\n            }else {\r\n                const apilink = `https://restcountries.eu/rest/v2/region/${this.state.SelectedRegion}`;\r\n                const api = await axios.get(apilink);\r\n                const data = await api.data\r\n                const arrayData = data.map(contry => {\r\n                    return contry.alpha2Code\r\n                })\r\n                this.setState({RegionArray: arrayData},)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    searchchange(value){\r\n        this.setState({TxtSearched:value})\r\n    }\r\n        \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    async GetCovidAPI(){\r\n        const apilink = 'https://api.covid19api.com/summary';\r\n        const api = await axios.get(apilink);\r\n        const data = await api.data\r\n        this.setState({Countries: data.Countries,})\r\n        const globalInfo = data.Global\r\n        this.setState({GlobalInfo: globalInfo,})\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {/* <GlobalInfo \r\n                    confirmed = {this.state.GlobalInfo.TotalConfirmed} \r\n                    recovered = {this.state.GlobalInfo.TotalRecovered} \r\n                    death = {this.state.GlobalInfo.TotalDeaths} \r\n                /> */}\r\n                <CountriesInfo \r\n                    countries = {this.state.Countries} \r\n                    global = {this.state.GlobalInfo}\r\n                    regionarray = {this.state.RegionArray}\r\n                    selecthandle = {value => this.SelectRegion(value)}\r\n                    searchchange= {searched => this.searchchange(searched)}\r\n                    searched = {this.state.TxtSearched}\r\n                />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}