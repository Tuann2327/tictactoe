{"version":3,"sources":["index.js"],"names":["DataList","props","countries","slice","map","country","Country","CountryCode","SearchMenu","state","selectedRegion","className","value","this","onChange","e","selecthandle","target","setState","disabled","list","placeholder","Component","CountriesInfo","regionarray","filter","includes","global","listCountries","flagSrc","toLowerCase","src","TotalConfirmed","toString","replace","TotalDeaths","TotalRecovered","listGlobal","App","GlobalInfo","Countries","SelectedRegion","RegionArray","GetCovidAPI","a","SelectRegion","apilink","axios","get","api","data","arrayData","contry","alpha2Code","console","log","globalInfo","Global","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.700394fe.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios'\r\nimport './index.css';\r\n\r\nfunction DataList(props){\r\n    \r\n    const countries =props.countries.slice()\r\n    const datalist = countries.map((country) => <option key={country.CountryCode}>{country.Country}</option>)\r\n    return datalist\r\n}\r\n\r\nclass SearchMenu extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            selectedRegion: '',\r\n        }\r\n    }\r\n    \r\n        \r\n    componentDidMount() {\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className='Search-Container'>\r\n                <h1>Covid-19 Reporter</h1>\r\n                <div className='Search-Bar'>\r\n                    <select \r\n                        className='Region-Selector' \r\n                        value={this.state.selectedRegion} \r\n                        onChange={\r\n                            (e)=>{\r\n                                this.props.selecthandle(e.target.value)\r\n                                this.setState({selectedRegion:e.target.value})\r\n                            }\r\n                        }\r\n                    >\r\n                        <option disabled={true} value=''>Select Region</option>\r\n                        <option>Africa</option>\r\n                        <option>Americas</option>\r\n                        <option>Asia</option>\r\n                        <option>Europe</option>\r\n                        <option>Oceania</option>\r\n                    </select>\r\n                    <select className='Search' list='country-search' placeholder='Search'>\r\n                        <DataList countries={this.props.countries}/>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nfunction GlobalInfo(props){\r\n    return(\r\n        <div className='Container'>\r\n            <h1>{props.confirmed}</h1>\r\n            <h1>{props.recovered}</h1>\r\n            <h1>{props.death}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountriesInfo(props){\r\n    const regionarray = props.regionarray;\r\n    let countries = props.countries.slice();\r\n    if(regionarray){\r\n        countries = countries.filter(country => {\r\n            return regionarray.includes(country.CountryCode)\r\n        })\r\n    } \r\n\r\n    const global = props.global;\r\n     if(!countries || !global) return null; \r\n    const listCountries = countries.map((country) =>{\r\n        const flagSrc = `https://flagcdn.com/w160/${country.CountryCode.toLowerCase()}.png`\r\n        return(\r\n        <div className='info-card'>\r\n            <img className='country-flag' src={flagSrc} />\r\n            <p className='country-name'>{country.Country}</p>\r\n            <p className='country-confirmed'>{country.TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-deaths'>{country.TotalDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-recovered'>{country.TotalRecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n        )\r\n        }\r\n    )\r\n    \r\n    const listGlobal = (global)=>{\r\n        return(\r\n            <div className='info-card world-wide'>\r\n            <img className='country-flag' src='https://i2x.ai/wp-content/uploads/2018/01/flag-global.jpg' />\r\n            <p className='country-name'>Global</p>\r\n            <p className='country-confirmed'>{global.TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-deaths'>{global.TotalDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <p className='country-recovered'>{global.TotalRecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n        )\r\n    }\r\n    return(\r\n        <section className='country-container'>\r\n            <header className='sticky-card'> \r\n                <SearchMenu selecthandle = {value => props.selecthandle(value)} countries={countries}/>\r\n                <div className='info-card card-title'>\r\n                    <p className='country-title title'>Countries</p>\r\n                    <p className='country-confirmed title'>Total Confirmed</p>\r\n                    <p className='country-deaths title'>Total Deaths</p>\r\n                    <p className='country-recovered title'>Total Recovered</p>\r\n                </div>\r\n                {listGlobal(global)}\r\n            </header>\r\n            {listCountries}\r\n        </section>\r\n    )\r\n}\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            GlobalInfo: '',\r\n            Countries: '',\r\n            SelectedRegion: null,\r\n            RegionArray: null,\r\n        }\r\n        this.GetCovidAPI()\r\n    }\r\n    \r\n    async SelectRegion(value){\r\n        \r\n        await this.setState({SelectedRegion: value})\r\n        if(this.SelectRegion){\r\n            const apilink = `https://restcountries.eu/rest/v2/region/${this.state.SelectedRegion}`;\r\n            const api = await axios.get(apilink);\r\n            const data = await api.data\r\n            const arrayData = data.map(contry => {\r\n                return contry.alpha2Code\r\n            })\r\n            this.setState({RegionArray: arrayData},)\r\n            console.log(arrayData)\r\n        }\r\n\r\n    }\r\n        \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    async GetCovidAPI(){\r\n        const apilink = 'https://api.covid19api.com/summary';\r\n        const api = await axios.get(apilink);\r\n        const data = await api.data\r\n        this.setState({Countries: data.Countries,})\r\n        const globalInfo = data.Global\r\n        this.setState({GlobalInfo: globalInfo,})\r\n        console.log(this.state.Countries)\r\n        console.log([1,2,3,4])\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {/* <GlobalInfo \r\n                    confirmed = {this.state.GlobalInfo.TotalConfirmed} \r\n                    recovered = {this.state.GlobalInfo.TotalRecovered} \r\n                    death = {this.state.GlobalInfo.TotalDeaths} \r\n                /> */}\r\n                <CountriesInfo \r\n                    countries = {this.state.Countries} \r\n                    global = {this.state.GlobalInfo}\r\n                    regionarray = {this.state.RegionArray}\r\n                    selecthandle = {value => this.SelectRegion(value)}\r\n                />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}